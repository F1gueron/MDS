1.cpp - 1.1.3

Comentar que el programa está implementado en C, aunque la extensión es para código C++.
- CWE-20: Improper Input Validation. El programa no valida correctamente si el valor de "ancho" y "alto" es menor o igual a 0. Dando lugar a posibles errores o valores incorrectos de salida.
- 1.exe
	- CWE-190: Integer Overflow or Wraparound -  El programa no está gestionando el posible valor incorrecto MAX_INT dando lugar a comportamiento inesperado en el programa. Si le damos valores anormalmente grandes al programa puede llegar a suceder que el resultado de la multiplicación de menor que cero. En este caso el programa nos devolverá la siguiente flag en hex: MDS25{S0LV3D}
	
2.java - 1.1.4

- Ante un error te imprime demasiada info...
- Manejo poco seguro de archivos...
- ...

3.py - 1.1.5

- CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - El programa recibe el contenido de `username` y `password` y no comprueba que sea incorrecto antes de realizar la consulta SQL, dando así lugar a posibles inyecciones.
- CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') - El programa no valida correctamente el ID que se le entrega en la función `download_games()`, se le podrían proporcionar caracteres adicionales como `../../` para acceder a información sensible.
- CWE-200:  Exposure of Sensitive Information to an Unauthorized Actor - La función `download_games()` no comprueba si el usuario está logueado anteriormente para descargar la partida. Cualquier atacante podría recorrer el path `/downloadGames/` indicando cualquier ID y descargarse todas las partidas sin autorización previa.
- La contraseña se guarda en la base de datos hasheada en MD5. Este método no es seguro ya que es fácilmente descifrable, lo mejor sería utilizar un algoritmo de hashing más robusto como SHA-256.
- La función `is_valid_password()` hace dos comprobaciones, una para la longitud total y otra para la cantidad de dígitos que contiene. Podrían añadirse más comprobaciones en busca de símbolos y/o mayúsculas.

4.php - 1.1.6

- CWE-94: Improper Control of Generation of Code ('Code Injection') - En la línea 37 el programa utiliza `eval()` para ejecutar una multiplicación mediante `echo`. Aunque en este programa no es explícitamente vulnerable, si el número en un futuro se recibe mediante input de usuario, podría ser una potencial vulnerabilidad de inyección de código.
- El código convierte un INT a String para luego comprobar si contiene el dígito concreto, esta práctica es innecesaria y se podría optimizar realizando la comparación de la siguiente forma `$number == 5`.
- Otra de las prácticas incorrectas se basa en la repetición de código, en lugar de utilizar un `if` distinto con un bucle `for` dentro de cada uno, podría realizarse un único bucle `for` y realizar la comprobación dentro de este único bucle global.
